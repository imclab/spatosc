#N canvas 624 90 995 830 10;
#X msg 501 158 clearScene;
#X floatatom 498 -12 5 0 0 0 - - -;
#X floatatom 537 -12 5 0 0 0 - - -;
#X floatatom 576 -12 5 0 0 0 - - -;
#X text 2 -35 [spatosc] Creates a spatosc audio scene and allows one
to create sound source nodes and listeners in a 3D virtual audio environment.
;
#X text 3 7 The spatosc library wraps audio spatialization engines
and controls them using the Open Sound Control protocol.;
#N canvas 0 22 290 211 pack3f 0;
#X obj 79 103 pack f f f;
#X obj 99 73 t b f;
#X obj 144 71 t b f;
#X obj 63 44 inlet;
#X obj 110 41 inlet;
#X obj 162 45 inlet;
#X obj 80 137 outlet;
#X connect 0 0 6 0;
#X connect 1 0 0 0;
#X connect 1 1 0 1;
#X connect 2 0 0 0;
#X connect 2 1 0 2;
#X connect 3 0 0 0;
#X connect 4 0 1 0;
#X connect 5 0 2 0;
#X restore 498 8 pd pack3f;
#X msg 499 247 removeTranslator spatdif;
#X msg 499 269 removeTranslator default;
#X msg 497 291 hasTranslator default;
#X msg 497 203 addTranslator fudi FudiTranslator localhost 31337;
#X floatatom 500 86 5 0 0 0 - - -;
#X floatatom 539 86 5 0 0 0 - - -;
#X floatatom 578 86 5 0 0 0 - - -;
#N canvas 0 22 290 211 pack3f 0;
#X obj 79 103 pack f f f;
#X obj 99 73 t b f;
#X obj 144 71 t b f;
#X obj 63 44 inlet;
#X obj 110 41 inlet;
#X obj 162 45 inlet;
#X obj 80 137 outlet;
#X connect 0 0 6 0;
#X connect 1 0 0 0;
#X connect 1 1 0 1;
#X connect 2 0 0 0;
#X connect 2 1 0 2;
#X connect 3 0 0 0;
#X connect 4 0 1 0;
#X connect 5 0 2 0;
#X restore 500 106 pd pack3f;
#X msg 498 -38 createSource noise;
#X msg 497 63 createListener ear;
#X msg 498 28 setPosition noise \$1 \$2 \$3;
#X msg 500 127 setPosition ear \$1 \$2 \$3;
#X msg 502 330 setNodeStringProperty noise foo bar;
#X msg 500 351 removeNodeStringProperty noise foo;
#X text 502 374 If you choose the FudiTranslator \, it's easy to receive
messages with [netreceive]:;
#X text 666 -41 <-- Create a sound source;
#X text 674 62 <-- Create a listener;
#X text 666 157 <-- Clear the whole scene;
#X text 494 186 Choose a translator \, which sends messages about the
scene;
#X text 638 291 <-- Check if a given translator is running;
#X text 730 329 <-- Add properties;
#X obj 45 128 p;
#X obj 44 96 OSCrx 18032;
#X msg 498 223 addTranslator spatdif SpatdifTranslator;
#X obj 113 561 DynamicPatchHolder \$0-SoundNodes;
#X obj 113 581 DynamicPatchHolder \$0-SoundConnections;
#N canvas -1277 64 871 861 dynload 0;
#X msg 229 66 vis 1;
#X msg 43 281 clear;
#X obj -182 147 list prepend;
#X obj -182 -8 inlet;
#X text -300 -36 list: abstract name with args to load;
#X obj 42 3 inlet;
#X text 85 5 bang to clear;
#X obj 229 35 inlet;
#X text 273 38 bang to open;
#X obj -183 31 t a b;
#X msg -100 112 obj 10 \$1;
#X obj -36 235 sel 0;
#X obj -65 87 + \$1;
#X text -301 -104 arg1: <opt> multi-obj-flag (when non-zero \, the
object will not delete current instance before instantiating another:
;
#X text -299 -75 note: the value of the flag is used as an incremental
offset the position of each instance on the canvas;
#X msg -76 64 50;
#X obj -101 87 f 10;
#X obj -182 173 list trim;
#X obj -182 204 t b a a b;
#X obj -184 578 send;
#X msg -109 424 obj \$1 \$2 pd \$3;
#X msg -318 370 vis 0 \, loadbang;
#X obj -226 308 list split 3;
#X obj -186 491 list prepend obj 20 20;
#X obj -185 513 list trim;
#X obj -140 279 unpack s f f s;
#X msg -158 555 symbol pd-\$1;
#X obj -110 403 pack f f s;
#X obj 9 287 + 1;
#X obj -23 287 f;
#X msg -23 341 set \$1;
#X obj -23 318 makefilename %%s-\$0-%d;
#X obj -45 372 makefilename;
#X obj -136 593 anyreg __dynload_temp_parent;
#X text -211 653 points to loaded patch's parent patcher ONLY at the
exact time the patch is loaded;
#X obj 42 521 send pd-\$0-SoundNodes;
#X obj -36 213 expr 1;
#X connect 0 0 35 0;
#X connect 1 0 35 0;
#X connect 2 0 17 0;
#X connect 3 0 9 0;
#X connect 5 0 1 0;
#X connect 5 0 15 0;
#X connect 7 0 0 0;
#X connect 9 0 2 0;
#X connect 9 1 16 0;
#X connect 10 0 2 1;
#X connect 11 0 1 0;
#X connect 12 0 16 1;
#X connect 15 0 16 1;
#X connect 16 0 10 0;
#X connect 16 0 12 0;
#X connect 17 0 18 0;
#X connect 18 0 21 0;
#X connect 18 1 22 0;
#X connect 18 2 25 0;
#X connect 18 3 29 0;
#X connect 18 3 36 0;
#X connect 20 0 35 0;
#X connect 21 0 19 0;
#X connect 22 1 23 0;
#X connect 23 0 24 0;
#X connect 24 0 19 0;
#X connect 25 1 27 0;
#X connect 25 2 27 1;
#X connect 25 3 32 0;
#X connect 26 0 19 1;
#X connect 26 0 33 0;
#X connect 27 0 20 0;
#X connect 28 0 29 1;
#X connect 29 0 28 0;
#X connect 29 0 31 0;
#X connect 30 0 32 0;
#X connect 31 0 30 0;
#X connect 32 0 26 0;
#X connect 32 0 27 2;
#X connect 36 0 11 0;
#X restore 77 461 pd dynload SoundNodes;
#N canvas 0 64 871 861 dynload 0;
#X msg 229 66 vis 1;
#X msg 43 281 clear;
#X obj -182 147 list prepend;
#X obj -182 -8 inlet;
#X text -300 -36 list: abstract name with args to load;
#X obj 42 3 inlet;
#X text 85 5 bang to clear;
#X obj 229 35 inlet;
#X text 273 38 bang to open;
#X obj -183 31 t a b;
#X msg -100 112 obj 10 \$1;
#X obj -36 235 sel 0;
#X obj -65 87 + \$1;
#X text -301 -104 arg1: <opt> multi-obj-flag (when non-zero \, the
object will not delete current instance before instantiating another:
;
#X text -299 -75 note: the value of the flag is used as an incremental
offset the position of each instance on the canvas;
#X msg -76 64 50;
#X obj -101 87 f 10;
#X obj -182 173 list trim;
#X obj -182 204 t b a a b;
#X obj -184 578 send;
#X msg -109 424 obj \$1 \$2 pd \$3;
#X msg -318 370 vis 0 \, loadbang;
#X obj -226 308 list split 3;
#X obj -186 491 list prepend obj 20 20;
#X obj -185 513 list trim;
#X obj -140 279 unpack s f f s;
#X msg -158 555 symbol pd-\$1;
#X obj -110 403 pack f f s;
#X obj 9 287 + 1;
#X obj -23 287 f;
#X msg -23 341 set \$1;
#X obj -23 318 makefilename %%s-\$0-%d;
#X obj -45 372 makefilename;
#X obj -136 593 anyreg __dynload_temp_parent;
#X text -197 641 points to loaded patch's parent patcher ONLY at the
exact time the patch is loaded;
#X obj -36 213 expr 1;
#X obj 42 521 send pd-\$0-SoundConnections;
#X connect 0 0 36 0;
#X connect 1 0 36 0;
#X connect 2 0 17 0;
#X connect 3 0 9 0;
#X connect 5 0 1 0;
#X connect 5 0 15 0;
#X connect 7 0 0 0;
#X connect 9 0 2 0;
#X connect 9 1 16 0;
#X connect 10 0 2 1;
#X connect 11 0 1 0;
#X connect 12 0 16 1;
#X connect 15 0 16 1;
#X connect 16 0 10 0;
#X connect 16 0 12 0;
#X connect 17 0 18 0;
#X connect 18 0 21 0;
#X connect 18 1 22 0;
#X connect 18 2 25 0;
#X connect 18 3 29 0;
#X connect 18 3 35 0;
#X connect 20 0 36 0;
#X connect 21 0 19 0;
#X connect 22 1 23 0;
#X connect 23 0 24 0;
#X connect 24 0 19 0;
#X connect 25 1 27 0;
#X connect 25 2 27 1;
#X connect 25 3 32 0;
#X connect 26 0 19 1;
#X connect 26 0 33 0;
#X connect 27 0 20 0;
#X connect 28 0 29 1;
#X connect 29 0 28 0;
#X connect 29 0 31 0;
#X connect 30 0 32 0;
#X connect 31 0 30 0;
#X connect 32 0 26 0;
#X connect 32 0 27 2;
#X connect 35 0 11 0;
#X restore 218 459 pd dynload SoundConnections;
#X obj 462 537 tgl 50 0 empty empty success 17 -7 0 10 -258113 -1 -1
0 1;
#X text 546 533 Usage: [spatosc s:translator f:port s:host];
#X text 548 550 The arguments are not mandatory. You can provide none
of \, only one \, two or all three. The default translator simply prints
to the console.;
#X obj 462 505 spatosc SpatdifTranslator 18032 localhost;
#X obj 462 481 r to_spatosc;
#X obj 468 456 s to_spatosc;
#X obj 100 326 r to_spatosc;
#X obj 99 360 route createListener createSource connect;
#X connect 0 0 40 0;
#X connect 1 0 6 0;
#X connect 2 0 6 1;
#X connect 3 0 6 2;
#X connect 6 0 17 0;
#X connect 7 0 40 0;
#X connect 8 0 40 0;
#X connect 9 0 40 0;
#X connect 10 0 40 0;
#X connect 11 0 14 0;
#X connect 12 0 14 1;
#X connect 13 0 14 2;
#X connect 14 0 18 0;
#X connect 15 0 40 0;
#X connect 16 0 40 0;
#X connect 17 0 40 0;
#X connect 18 0 40 0;
#X connect 19 0 40 0;
#X connect 20 0 40 0;
#X connect 29 0 28 0;
#X connect 30 0 40 0;
#X connect 38 0 35 0;
#X connect 39 0 38 0;
#X connect 41 0 42 0;
