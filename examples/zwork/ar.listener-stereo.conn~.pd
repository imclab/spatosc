#N canvas -1784 22 1417 1143 10;
#X obj 2 1 cnv 15 500 30 empty empty DSP.plugin:(listener-stereo~)
5 15 1 18 -228856 -16662 0;
#X obj 258 7 cnv 20 20 20 empty empty nodeID:(\$2) 5 10 0 12 -233017
-66577 0;
#X obj 315 37 namecanvas \$4.plugin.patch;
#X text 152 617 <- audio from source;
#X text 10 62 the audio signal should be copied and routed N times
for each of the N loudspeakers;
#X obj 37 616 receive~ \$2.from~;
#X floatatom 1071 162 7 0 0 1 src-gain_(yaw*distance) - -;
#X obj 14 295 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 34 144 from vAudioRenderer;
#X obj 388 689 route 0 1;
#N canvas 0 29 704 530 more 0;
#X obj 507 45 r \$4;
#X text 552 47 <- connection messages & coeffs;
#X obj 275 169 s \$1-to-SPIN;
#X text 372 170 <- this is how to send to SPIN;
#X text 163 213 <- this is how to receiver listener params;
#X obj 275 147 list prepend \$3 setParam;
#X text 63 272 (alternatively \, params can be stored in an anyreg
that lives in the listener's pugin patch \, and accessed here);
#X obj 36 52 r \$4.nodeMsg;
#X obj 70 214 r \$3.nodeMsg;
#X obj 506 72 route list setThru mute;
#X obj 70 240 route setParam setSpread;
#X text 115 262 need "setSpread" method ??;
#X text 64 304 yaw FILTER: Lpf1 = 500 + ( 21550 * (0.5 - ( .5*cos(pow(rolloffScaler
\, 4)*M_PI) ) ) ) \;;
#X text 61 370 rolloffScaler = (double) (1.0 - (.01*conn->rolloffEffect
* (1.0 - snkyawGain))) \;;
#X text 65 337 snkyawGain = conn->snk->rolloff->getValue( (snkyaw *
conn->snk->spread) / M_PI ) \;;
#X obj 36 79 route setDistanceEffect setRolloffEffect setDopplerEffect
setDiffractionEffect setThru;
#X text 129 49 connection params from SPIN;
#X connect 0 0 9 0;
#X connect 5 0 2 0;
#X connect 7 0 15 0;
#X connect 8 0 10 0;
#X restore 544 40 pd more;
#X obj 37 675 dsp.conn.distance~;
#X obj 73 281 s \$0-thru;
#X obj 136 282 s \$0-mute;
#X obj 119 650 r \$0-thru;
#X obj 191 653 r \$0-mute;
#X obj 185 150 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 404 141 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 403 166 s \$0-mute;
#X obj 185 176 s \$0-thru;
#X floatatom 997 228 5 0 0 1 sinkNo - -;
#X text 67 692 source to sink distance and absorption;
#X obj 38 540 list split 3;
#X obj 998 103 unpack 0 0 0 0 0 0;
#X text 22 366 id sink-gain diffraction_hz src-gain absorption_hz dist_ms
;
#X floatatom 1048 181 7 0 0 1 diffraction_hz - -;
#X floatatom 1022 204 7 0 0 1 sink-gain_(yaw) - -;
#X floatatom 1121 127 7 0 0 1 distance_ms - -;
#X floatatom 1095 146 7 0 0 1 absorption_hz - -;
#X obj 111 780 *~ 0.2;
#X obj 111 754 lop~ 50;
#X text 174 753 ambient signal (indirect);
#X floatatom 186 791 5 0 0 0 - - -;
#X obj 107 928 dsp.conn-vmic~ \$0 0 vmicL \$3;
#X obj 102 969 dsp.conn-vmic~ \$0 1 vmicR \$3;
#X obj 41 165 receive \$2->\$3;
#X obj 44 341 pack 0 0 0 0 0 0;
#X obj 548 143 r \$1-compConn;
#X obj 549 179 s \$1-to_spatOSC;
#X obj 144 107 print \$2->\$3_rxParams;
#X obj 483 302 unpack 0 0 0;
#X floatatom 520 334 5 0 0 0 - - -;
#X floatatom 557 335 5 0 0 0 - - -;
#X floatatom 271 285 5 0 0 0 - - -;
#X floatatom 346 297 5 0 0 0 - - -;
#X obj 41 208 route bang thru mute gainDB delay aed;
#X floatatom 480 334 5 0 0 0 - - -;
#X obj 445 380 pack 0 0 0 0;
#X text 493 284 azi elev. distance;
#X text 384 299 dist-ms;
#X text 302 282 gainDB;
#X text 528 380 src-gain-db dist_ms azimuth elevation;
#X floatatom 517 870 5 0 0 0 - - -;
#X floatatom 516 976 7 0 0 1 absorption_hz - -;
#X obj 522 567 + 500;
#X obj 446 409 unpack 0 0 0 0;
#X obj 445 456 t f f;
#X floatatom 522 484 5 0 0 0 - - -;
#X obj 521 454 expr 1 - $f1*-0.01;
#X obj 522 512 pow 0.9;
#X floatatom 522 592 7 0 0 1 absorption_hz - -;
#X obj 428 626 pack 0 0 0;
#X obj 445 485 db2amp;
#X floatatom 492 764 5 0 0 0 - - -;
#X floatatom 493 711 5 0 0 0 - - -;
#X obj 492 822 pow 2;
#X text 288 930 sink-gain diffraction_hz;
#X text 280 970 sink-gain diffraction_hz;
#X floatatom 632 721 8 0 0 1 yaw - -;
#X obj 632 752 deg2rad;
#X obj 632 689 getParam \$3 vmicL.yaw;
#X obj 516 949 + 100;
#X obj 522 540 * 19500;
#X obj 517 923 * 19900;
#X obj 517 895 pow 0.4;
#X obj 492 845 t f f;
#X obj 487 1054 pack 0 0;
#X floatatom 815 852 5 0 0 0 - - -;
#X floatatom 814 958 7 0 0 1 absorption_hz - -;
#X floatatom 790 746 5 0 0 0 - - -;
#X floatatom 791 693 5 0 0 0 - - -;
#X obj 790 804 pow 2;
#X floatatom 930 703 8 0 0 1 yaw - -;
#X obj 930 734 deg2rad;
#X obj 814 931 + 100;
#X obj 815 905 * 19900;
#X obj 815 877 pow 0.4;
#X obj 790 827 t f f;
#X obj 785 1036 pack 0 0;
#X obj 930 671 getParam \$3 vmicR.yaw;
#X floatatom 943 831 5 0 0 0 - - -;
#X text 980 832 rolloff intensity;
#X floatatom 1090 759 5 0 0 0 - - -;
#X obj 429 579 * 1;
#X obj 674 473 expr .5+.5*cos($f1);
#X obj 674 499 pow 2;
#X floatatom 674 448 5 0 0 0 - - -;
#X floatatom 674 523 5 0 0 0 - - -;
#X text 721 443 elevation scaler (assumes vmics on same Z plane);
#X obj 404 116 loadbang1 0;
#X text 545 120 need to get virtual mic params to spatOSC;
#X text 1011 77 old way;
#X obj 492 789 expr .5+.5*cos($f1 - $f2);
#X obj 790 771 expr .5+.5*cos($f1 - $f2);
#X obj 1092 666 r \$3.spread;
#X text 1111 643 listener spread intensity;
#X connect 5 0 11 0;
#X connect 7 0 36 0;
#X connect 9 0 33 2;
#X connect 9 1 34 2;
#X connect 11 0 30 0;
#X connect 11 0 33 0;
#X connect 11 0 34 0;
#X connect 14 0 11 2;
#X connect 15 0 11 3;
#X connect 16 0 19 0;
#X connect 17 0 18 0;
#X connect 22 1 11 1;
#X connect 23 0 20 0;
#X connect 23 1 26 0;
#X connect 23 2 25 0;
#X connect 23 3 6 0;
#X connect 23 4 28 0;
#X connect 23 5 27 0;
#X connect 29 0 33 1;
#X connect 29 0 34 1;
#X connect 30 0 29 0;
#X connect 32 0 29 1;
#X connect 35 0 45 0;
#X connect 36 0 9 0;
#X connect 36 0 22 0;
#X connect 37 0 38 0;
#X connect 40 0 46 0;
#X connect 40 1 41 0;
#X connect 40 2 42 0;
#X connect 41 0 47 3;
#X connect 43 0 47 0;
#X connect 44 0 47 1;
#X connect 45 1 12 0;
#X connect 45 2 13 0;
#X connect 45 3 43 0;
#X connect 45 4 44 0;
#X connect 45 5 40 0;
#X connect 46 0 47 2;
#X connect 47 0 55 0;
#X connect 52 0 74 0;
#X connect 53 0 76 1;
#X connect 54 0 60 0;
#X connect 55 0 56 0;
#X connect 55 1 61 2;
#X connect 55 2 64 0;
#X connect 55 2 80 0;
#X connect 55 3 96 0;
#X connect 56 0 62 0;
#X connect 56 1 58 0;
#X connect 57 0 59 0;
#X connect 58 0 57 0;
#X connect 59 0 72 0;
#X connect 60 0 61 1;
#X connect 61 0 11 1;
#X connect 62 0 93 0;
#X connect 63 0 102 0;
#X connect 64 0 63 0;
#X connect 65 0 75 0;
#X connect 68 0 69 0;
#X connect 69 0 102 1;
#X connect 70 0 68 0;
#X connect 71 0 53 0;
#X connect 72 0 54 0;
#X connect 73 0 71 0;
#X connect 74 0 73 0;
#X connect 75 0 76 0;
#X connect 75 1 52 0;
#X connect 76 0 33 2;
#X connect 77 0 86 0;
#X connect 78 0 88 1;
#X connect 79 0 103 0;
#X connect 80 0 79 0;
#X connect 81 0 87 0;
#X connect 82 0 83 0;
#X connect 83 0 103 1;
#X connect 84 0 78 0;
#X connect 85 0 84 0;
#X connect 86 0 85 0;
#X connect 87 0 88 0;
#X connect 87 1 77 0;
#X connect 88 0 34 2;
#X connect 89 0 82 0;
#X connect 90 0 86 1;
#X connect 90 0 74 1;
#X connect 92 0 81 1;
#X connect 92 0 65 1;
#X connect 93 0 61 0;
#X connect 94 0 95 0;
#X connect 95 0 97 0;
#X connect 96 0 94 0;
#X connect 97 0 93 1;
#X connect 99 0 17 0;
#X connect 102 0 65 0;
#X connect 103 0 81 0;
#X connect 104 0 92 0;
#X coords 0 0 1 1 400 400 0;
