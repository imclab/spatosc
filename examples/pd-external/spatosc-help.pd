#N canvas 436 22 961 710 10;
#X obj 24 502 tgl 50 0 empty empty success 17 -7 0 10 -258113 -1 -1
1 1;
#X msg 501 158 clearScene;
#X floatatom 498 -12 5 0 0 0 - - -;
#X floatatom 537 -12 5 0 0 0 - - -;
#X floatatom 576 -12 5 0 0 0 - - -;
#X text 34 -26 [spatosc] Creates a spatosc audio scene and allows one
to create sound source nodes and listeners in a 3D virtual audio environment.
;
#X text 38 15 The spatosc library wraps audio spatialization engines
and controls them using the Open Sound Control protocol.;
#N canvas 0 22 290 211 pack3f 0;
#X obj 79 103 pack f f f;
#X obj 99 73 t b f;
#X obj 144 71 t b f;
#X obj 63 44 inlet;
#X obj 110 41 inlet;
#X obj 162 45 inlet;
#X obj 80 137 outlet;
#X connect 0 0 6 0;
#X connect 1 0 0 0;
#X connect 1 1 0 1;
#X connect 2 0 0 0;
#X connect 2 1 0 2;
#X connect 3 0 0 0;
#X connect 4 0 1 0;
#X connect 5 0 2 0;
#X restore 498 8 pd pack3f;
#X text 104 474 Usage: [spatosc s:translator f:port s:host];
#X text 106 491 The arguments are not mandatory. You can provide none
of \, only one \, two or all three. The default translator simply prints
to the console.;
#X obj 24 470 spatosc;
#X msg 499 247 removeTranslator spatdif;
#X msg 499 269 removeTranslator default;
#X msg 497 291 hasTranslator default;
#X text 109 537 Example using arguments:;
#X obj 106 557 spatosc DmitriTranslator 18033 localhost;
#X obj 464 509 netreceive 31337 1;
#X msg 497 203 addTranslator fudi FudiTranslator localhost 31337;
#X floatatom 500 86 5 0 0 0 - - -;
#X floatatom 539 86 5 0 0 0 - - -;
#X floatatom 578 86 5 0 0 0 - - -;
#N canvas 0 22 290 211 pack3f 0;
#X obj 79 103 pack f f f;
#X obj 99 73 t b f;
#X obj 144 71 t b f;
#X obj 63 44 inlet;
#X obj 110 41 inlet;
#X obj 162 45 inlet;
#X obj 80 137 outlet;
#X connect 0 0 6 0;
#X connect 1 0 0 0;
#X connect 1 1 0 1;
#X connect 2 0 0 0;
#X connect 2 1 0 2;
#X connect 3 0 0 0;
#X connect 4 0 1 0;
#X connect 5 0 2 0;
#X restore 500 106 pd pack3f;
#X msg 498 -38 createSource noise;
#X msg 497 63 createListener ear;
#X msg 498 28 setPosition noise \$1 \$2 \$3;
#X msg 500 127 setPosition ear \$1 \$2 \$3;
#X msg 499 326 setNodeStringProperty noise foo bar;
#X msg 503 411 removeNodeStringProperty noise foo;
#X obj 464 550 print viaFudi;
#X obj 559 536 list split 2;
#X obj 559 611 unpack s s;
#X symbolatom 559 638 10 0 0 0 - - -;
#X symbolatom 625 637 10 0 0 0 - - -;
#X obj 695 613 unpack f f f;
#X floatatom 695 637 5 0 0 0 - - -;
#X floatatom 740 638 5 0 0 0 - - -;
#X floatatom 779 637 5 0 0 0 - - -;
#X obj 559 589 list trim;
#X obj 695 592 route xyz;
#X obj 695 571 list trim;
#X text 461 474 If you choose the FudiTranslator \, it's easy to receive
messages with [netreceive]:;
#X text 666 -41 <-- Create a sound source;
#X text 674 62 <-- Create a listener;
#X text 666 157 <-- Clear the whole scene;
#X text 494 186 Choose a translator \, which sends messages about the
scene;
#X text 638 291 <-- Check if a given translator is running;
#X text 730 329 <-- Add properties;
#X obj 120 104 OSCrx 18032;
#X obj 120 133 print SPATOSC;
#X msg 498 223 addTranslator spatdif SpatdifTranslator localhost 18032
;
#X msg 500 353 setNodeFloatProperty noise param 1.4;
#X msg 504 380 setNodeIntProperty noise param 1000;
#X connect 1 0 10 0;
#X connect 2 0 7 0;
#X connect 3 0 7 1;
#X connect 4 0 7 2;
#X connect 7 0 24 0;
#X connect 10 0 0 0;
#X connect 11 0 10 0;
#X connect 12 0 10 0;
#X connect 13 0 10 0;
#X connect 16 0 28 0;
#X connect 16 0 29 0;
#X connect 17 0 10 0;
#X connect 18 0 21 0;
#X connect 19 0 21 1;
#X connect 20 0 21 2;
#X connect 21 0 25 0;
#X connect 22 0 10 0;
#X connect 23 0 10 0;
#X connect 24 0 10 0;
#X connect 25 0 10 0;
#X connect 26 0 10 0;
#X connect 27 0 10 0;
#X connect 29 0 37 0;
#X connect 29 1 39 0;
#X connect 30 0 31 0;
#X connect 30 1 32 0;
#X connect 33 0 34 0;
#X connect 33 1 35 0;
#X connect 33 2 36 0;
#X connect 37 0 30 0;
#X connect 38 0 33 0;
#X connect 39 0 38 0;
#X connect 47 0 48 0;
#X connect 49 0 10 0;
#X connect 50 0 10 0;
#X connect 51 0 10 0;
