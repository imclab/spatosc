Spatosc TODO
============

Implementations
---------------
 * Implement SpatdifReceiver
 * Implement SpatdifTranslator

OSC
---
 * support lo_send_from in OscSender

Examples
--------
 * Progress in the Ogre example
 * Make the clutter / openal example use meters in its GUI
 * Update the openal rendering example

Packaging
---------
 * add an --enable-debug flag
 * remove non-public functions and typedefs from include/*.h
 * build and install on Windows (needs <tr1/memory>, <regex.h> and <sys/utsname.h>)
 * On win32, it doesn't find some symbols in <cmath>: M_PI, std::isnan
 * maths:425 and 450: conversion from 'double' to 'float', possible loss of data

Refactoring
-----------
 * remove friend classes in vBaseNode
 * Cleanup the public interface of the public classes.
 * Scene::update methods should be renamed to something more meaningful
 * convert aed-style orientation into quaternions. (or at least support also quaternions)
 * rename dmitri_translator.h like that.
 * rename Node.setPosition to setPositionXYZ(x,y,z)
 * add setPositionAED(a, e, d)
 * Should we warn clients that we disconnected some nodes?

Error handling
--------------
 * We should also check the type of the two nodes in connect(). We should implement bool Node::isSource() and bool Node::isSink()

Wrapper for OSC and FUDI callbacks
----------------------------------
 * [s:sceneName] [s:nodeName] [s:method] [s:typeTags] [s:args...]

 spatosc_connect(s:scene, s:from, s:to)
 spatosc_create_listener(s:scene, s:node)
 spatosc_create_scene(s:scene)
 spatosc_create_source(s:scene, s:node)
 spatosc_delete(s:scene, s:node)
 spatosc_delete_scene(s:scene)
 spatosc_disconnect(s:scene, s:from, s:to)
 spatosc_set_auto_connect(s:scene, b:enabled)
 spatosc_set_connect_filter(s:scene, s:regex)
 spatosc_set_orientation(s:scene, s:node, f:pitch, f:roll, f:yaw)
 spatosc_set_position(s:scene, s:node, f:x, f:y, f:z)
 spatosc_set_source_channel(s:scene, s:sound_source, s:channel)
 spatosc_set_source_gain(s:scene, s:sound_source)
 spatosc_set_translator(s:scene, s:translator)

