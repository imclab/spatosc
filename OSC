SpatDIF
-------

Here is the spatosc flavour of spatdif. It's inspired by it, but not quite the same.

The <node_id> can be any ASCII alpha-numeric string. Underscores and hyphens are OK.
<s:receiver_type> denotes one of "source", "listener", "connection" or "scene".

 * /spatosc/core/<s:receiver_type>/<s:node_id>/xyz f:x f:y f:z
 * /spatosc/core/<s:receiver_type>/<s:node_id>/xy f:x f:y (projected position on xy plane)
 * /spatosc/core/<s:receiver_type>/<s:node_id>/spread f:spread
 * /spatosc/core/<s:receiver_type>/<s:node_id>/spreadAE f:azim_spread f:elev_spread
 * /spatosc/core/connection/<s:connection_id>/aed f:azimuth f:elevation f:distance_meters
 * /spatosc/core/connection/<s:connection_id>/delay f:delay_ms
 * /spatosc/core/connection/<s:connection_id>/gain f:gain
 * /spatosc/core/connection/<s:connection_id>/gainDB f:gain_DB
 * /spatosc/core/scene/create_source s:id
 * /spatosc/core/scene/create_listener s:id

 The geotransform extension allows clients to specify a coordinate space transformation to be done on 
 the rendering side. For example, if a client want all of its coordinates to be shifted 5 units up in y,
 they would send a translation message with (0.0, 5.0, 0.0) as arguments.

 * /spatosc/geotransform/translation f:x f:y f:z
 * /spatosc/geotransform/rotation f:x f:y f:z f:w
 * /spatosc/geotransform/scale f:xScale f:yScale f:zScale
 * /spatosc/geotransform/shear f:a f:b f:c f:d f:e f:f


D-Mitri
-------

[TODO]

